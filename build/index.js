var $=(T,C)=>{const E=typeof T==="number"?T:Number(T);return!isNaN(E)&&Array.isArray(C)&&C.length>0&&E>=0&&E<C.length},f=(T)=>{return Array.isArray(T)},z=(T)=>{return Array.isArray(T)&&T.length!=0},A=(T,C)=>{let E=null;return(...w)=>{if(!E)T(...w),E=setTimeout(()=>{E=null},C)}},B=(T,C)=>{let E=null;return(...w)=>{if(E)clearTimeout(E);E=setTimeout(()=>{T(...w)},C)}},D=(T)=>new Promise((C)=>setTimeout(C,T)),F=(T)=>{return/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(T)},G=/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,H=(T)=>{return/^1[3456789]\d{9}$/.test(T)},J=(T,C)=>{const E=C.indexOf(T);if(E>=0)C.splice(E,1)},L=(T,C)=>{return T.splice(C,1)},N=(T,C)=>[...T,...C],O=(T)=>{return Array.from(new Set(T))},P=(T,C)=>{return Math.floor(Math.random()*(C-T+1)+T)},Q=(T)=>typeof T==="string",R=(T)=>typeof T==="number",U=(T)=>{let C=T.length,E,w;while(C)w=Math.floor(Math.random()*C--),E=T[C],T[C]=T[w],T[w]=E;return T},W=(T)=>JSON.parse(JSON.stringify(T)),X=(T)=>T.replace(/\w\S*/g,(C)=>C.charAt(0).toUpperCase()+C.substr(1).toLowerCase()),Y=(T,C)=>T.reduce((E,w)=>{const M=w[C];if(!E[M])E[M]=[];return E[M].push(w),E},{}),Z=(T)=>Object.keys(T).length===0&&T.constructor===Object,_=(T,C,E)=>new Intl.NumberFormat(E,{style:"currency",currency:C}).format(T),h=(T)=>T.charAt(0).toUpperCase()+T.slice(1),q=(T,C)=>T.length===C.length&&T.every((E,w)=>E===C[w]),S=(T)=>Math.random().toString(36).substring(2,T),k=(T)=>T.replace(/^\?/,"").split("&").reduce((C,E)=>{const[w,M]=E.split("=");return C[decodeURIComponent(w)]=decodeURIComponent(M||""),C},{});export{O as unique,X as toTitleCase,A as throttle,D as sleep,U as shuffle,L as removeAtIndex,J as remove,S as randomString,P as random,k as parseQueryString,N as merge,Q as isString,H as isPhone,R as isNumber,z as isIndexable,$ as isIndexOf,Z as isEmptyObject,F as isEmail,f as isArray,Y as groupBy,_ as formatCurrency,G as emailRegex,W as deepClone,B as debounce,h as capitalize,q as arraysEqual};

//# debugId=FDF301B39A5A868B64756e2164756e21
